datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Ad {
  id          Int     @id @default(autoincrement())
  title       String
  description String?
  isActive    Boolean @default(false) @map("is_active")
  author      User    @relation(fields: [authorId], references: [id])
  authorId    Int     @map("author_id")
  user        User?   @relation("saved_posts", fields: [userId], references: [id])
  userId      Int?    @map("user_id")

  @@map("ads")
}

model User {
  id            Int      @id @default(autoincrement())
  name          String?
  firstName     String?  @map("first_name")
  lastName      String?  @map("last_name")
  username      String?
  password      String?
  image         String?
  emailVerified Boolean? @map("email_verified")
  email         String?  @unique
  avatar        String?
  isPrivate     Boolean  @default(false) @map("is_private")
  ads           Ad[]
  savedAds      Ad[]     @relation("saved_posts")
  follows       User[]   @relation("follows_users")
  user          User[]   @relation("follows_users", fields: [userId], references: [id])
  userId        Int?     @map("user_id")

  @@map("asers")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")


  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}
